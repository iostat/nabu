# This gets echoed out when the application starts
# for the operator to ensure that they have the right configuration
# set in their JARs.
#
# Furthermore, this affects certain aspects of Nabu's functionality
#
# REQUIRED
nabu.env: dev

# Where the built-in ES node gets to play
#
# Needs to have an elasticsearch.yml file that you'd have in your cluster
# except with all the options relating to data and master disabled.
#
# See data/es-home/elasticsearch.yml for an example
#
# REQUIRED
nabu.es.path.home: ${env:PWD}/data/es-home

# By default, Nabu will not queue or throttle any writes
# You must explicitly specify a list of indices to perform throttling on
#
# Every throttled index needs to have an associated kafka topic with it
# named <index-name>-backlog
#
# REQUIRED
nabu.es.throttled.indices: index-v1, another-v2, one-v3

# Whether or not to enable/disable the built-in node's HTTP server
# (defaults to false)
nabu.es.http.enable: true

# What port to run the embedded ES node's HTTP server on (if enabled)
# (defaults to 19216)
# nabu.es.http.port: 19216

# A list of Kafka brokers. Comma-separated.
#
# REQUIRED
nabu.kafka.brokers: localhost:9092, localhost:9093

# How many consumers to have for each throttled index
# Kafka topic
#
# For optimal performance, the amount of partitions for each topic you create
# for throttled indicies should be equal to
# <number of nabu instances> * <number of consumers>
#
# An interesting side effect is that due to the way Nabu partitions the throttling backlog
# into Kafka, if the amount of partitions you have equals the amount of shards in the index,
# then each Kafka consumer will be responsible for exactly one shard!
#
# REQUIRED
nabu.kafka.consumers: 2
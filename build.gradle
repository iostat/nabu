group 'io.stat.nabuproject'
version '0.1-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath('com.github.jengelman.gradle.plugins:shadow:1.2.2')
        classpath('com.netflix.nebula:gradle-aggregate-javadocs-plugin:2.2.+')
    }
}

// aggregate javadocs from all subprojects into build/docs/javadocs
//apply plugin: 'nebula-aggregate-javadocs'

// need to put lombok here because IDEA doesn't have "module classpath" annotation processing
// aka LAME
allprojects {
    apply(plugin: 'java')
    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }

    project.ext.delombokPath = "${project.projectDir}/build/delombok/main/java"
}

subprojects {
    apply(plugin: 'com.github.johnrengelman.shadow')

    // for per-environment config file packaging.
    project.ext.buildEnvironment = project.hasProperty('env') ? env : 'dev'
    project.ext.projectPath = project.file(".").absolutePath

    // Lovingly borrowed from
    // http://tobiasbayer.com/blog/2011/04/16/building-for-different-environments-with-gradle/
    task copyConfiguration << {
        println "Target build environment: $buildEnvironment"

        copy {

            from "$projectPath/src/main/env/$buildEnvironment"
            into "$projectPath/src/main/resources"
            include "*/"
        }
    }

    // Delete the stuff copied into src/main/resources per-env
    task cleanCopiedConfiguration {
        delete fileTree(dir: "$projectPath/src/main/resources", exclude: ".keep")
    }

    processResources.dependsOn(copyConfiguration)
    clean.dependsOn(cleanCopiedConfiguration)

    jar {
        // when doing `gradle jar`, the output will be
        // "build/libs/baseName-version-tag.jar
        // this sets baseName to `nabuproject-dev` or `nabuproject-prod`
        // depending on what -Penv= was passed when building
        baseName = "${baseName}-${project.ext.buildEnvironment}"
    }

    shadowJar {
        // when doing `gradle shadowJar`, the output will be
        // "build/libs/baseName-version-tag-all.jar
        // this sets baseName to `nabuproject-dev` or `nabuproject-prod`
        // depending on what -Penv= was passed when building
        baseName = "${baseName}-${project.ext.buildEnvironment}"

        mergeServiceFiles()
    }

    configurations {
        lombok
    }

    dependencies {
        lombok (group: 'org.projectlombok', name: 'lombok', version: '1.16.6')
        compile configurations.lombok.dependencies
    }

    sourceSets {
        delombok {
            java {
                srcDir project.ext.delombokPath
            }
        }
    }

    task delombok {
        inputs.files project.sourceSets.main.allJava
        outputs.dir file(project.ext.delombokPath)

        doLast {
            FileCollection collection = files(configurations.compile)
            FileCollection sumTree = collection + fileTree(dir: 'bin')

            ant.taskdef(name: 'delombok', classname: 'lombok.delombok.ant.Tasks$Delombok', classpath: configurations.lombok.asPath)
            ant.delombok(from: "${project.projectDir}/src/main/java", to: project.ext.delombokPath, classpath: sumTree.asPath)
        }
    }
}

task docs(type: Javadoc) {
    source (subprojects.collect
            {project -> project.sourceSets.delombok.allJava })

    dependsOn(subprojects.collect
            {project -> project.tasks.delombok})

    classpath = (files(subprojects.collect
            {project -> project.sourceSets.main.compileClasspath}))
    destinationDir = new File(projectDir, 'docs')

    // cause there are some sneaky throws, and weird lombok annotations
    // and JDK8's doclint is suuuuuuper strict
    failOnError = false

    // link to standard javadocs where needed
    // and ES docs
    // and probably kafka
    // and guice
    options.setLinks(["https://docs.oracle.com/javase/8/docs/api/",
                      "https://google.github.io/guice/api-docs/4.0/javadoc/",
                      "https://google.github.io/guava/releases/19.0/api/docs/",
                      "http://javadoc.kyubu.de/elasticsearch/v2.1.0/",
                      "http://kafka.apache.org/082/javadoc/"
    ])

    options.author = true
}

task jenkins(dependsOn: [":enki:shadowJar", ":nabu:shadowJar", ":client-test:shadowJar", "docs"]) << {
    exec {
        executable "docker"
        args 'rmi', 'srnk.io/svcs/nabu'
        ignoreExitValue = true
    }

    exec {
        executable "docker"
        args 'build', '-t', 'srnk.io/svcs/nabu:0.1', '.'
    }

    exec {
        executable "docker"
        args 'push', 'srnk.io/svcs/nabu:0.1', '.'
    }
}

group 'io.stat.nabuproject'
version '0.1-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath('com.github.jengelman.gradle.plugins:shadow:1.2.2')
        classpath('com.netflix.nebula:gradle-aggregate-javadocs-plugin:2.2.+')
    }
}

// aggregate javadocs from all subprojects into build/docs/javadocs
apply plugin: 'nebula-aggregate-javadocs'

// need to put lombok here because IDEA doesn't have "module classpath" annotation processing
// aka LAME
allprojects {
    apply(plugin: 'java')
    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    apply(plugin: 'com.github.johnrengelman.shadow')

    // for per-environment config file packaging.
    project.ext.buildEnvironment = project.hasProperty('env') ? env : 'dev'
    project.ext.projectPath = project.file(".").absolutePath

    // Lovingly borrowed from
    // http://tobiasbayer.com/blog/2011/04/16/building-for-different-environments-with-gradle/
    task copyConfiguration << {
        println "Target build environment: $buildEnvironment"

        copy {

            from "$projectPath/src/main/env/$buildEnvironment"
            into "$projectPath/src/main/resources"
            include "*/"
        }
    }

    // Delete the stuff copied into src/main/resources per-env
    task cleanCopiedConfiguration {
        println "Clearing src/main/resources/*"

        delete fileTree(dir: "$projectPath/src/main/resources", exclude: ".keep")
    }

    processResources.dependsOn(copyConfiguration)
    clean.dependsOn(cleanCopiedConfiguration)

    javadoc {
        // cause there are some sneaky throws, and weird lombok annotations
        // and JDK8's doclint is suuuuuuper strict
        failOnError = false

        // link to standard javadocs where needed
        options.links = [
                'https://docs.oracle.com/javase/8/docs/api/'
                ]
    }

    jar {
        // when doing `gradle jar`, the output will be
        // "build/libs/baseName-version-tag.jar
        // this sets baseName to `nabuproject-dev` or `nabuproject-prod`
        // depending on what -Penv= was passed when building
        baseName = "${baseName}-${project.ext.buildEnvironment}"
    }

    shadowJar {
        // when doing `gradle shadowJar`, the output will be
        // "build/libs/baseName-version-tag-all.jar
        // this sets baseName to `nabuproject-dev` or `nabuproject-prod`
        // depending on what -Penv= was passed when building
        baseName = "${baseName}-${project.ext.buildEnvironment}"

        mergeServiceFiles()
    }
}

group 'io.stat.nabuproject'
version '0.1-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath('com.github.jengelman.gradle.plugins:shadow:1.2.2')
    }
}

// need to put lombok here because IDEA doesn't have "module classpath" annotation processing
// aka LAME
allprojects {
    apply(plugin: 'java')
    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        // lombok :fire:
        compile(group: 'org.projectlombok', name: 'lombok', version: '1.16.6')
    }
}

subprojects {
    apply(plugin: 'application')
    apply(plugin: 'com.github.johnrengelman.shadow')
    applicationDefaultJvmArgs = ["-server"]

    // for per-environment config file packaging.
    project.ext.buildEnvironment = project.hasProperty('env') ? env : 'dev'
    project.ext.projectPath = project.file(".").absolutePath

    // Lovingly borrowed from
    // http://tobiasbayer.com/blog/2011/04/16/building-for-different-environments-with-gradle/
    task copyConfiguration << {
        println "Target build environment: $buildEnvironment"

        copy {

            from "$projectPath/src/main/env/$buildEnvironment"
            into "$projectPath/src/main/resources"
            include "*/"
        }
    }

    // Delete the stuff copied into src/main/resources per-env
    task cleanCopiedConfiguration {
        println "Clearing src/main/resources/*"

        delete fileTree(dir: "$projectPath/src/main/resources", exclude: ".keep")
    }

    processResources.dependsOn(copyConfiguration)
    clean.dependsOn(cleanCopiedConfiguration)

    dependencies {
        testCompile(group: 'junit', name: 'junit', version: '4.11')

        // dependencies are like heroin, you only get the most out of it when you inject
        compile(group: 'com.google.inject', name: 'guice', version: '4.0') {
            // preemptive avoidance of jar hell due to multiple versions of guava in classpath
            // guice depends on 18.0, but the latest is 19.0.
            // we may end up using it anyway (see next dependency)
            exclude group: 'com.google.guava', module: 'guava'
        }

        // guice depends on guava anyway, and we might get some use of it.
        compile(group: 'com.google.guava', name: 'guava', version: '19.0')

        // async networking ftw
        compile(group: 'io.netty', name: 'netty-all', version: '4.0.33.Final')

        // slf4j logging.
        compile(group: 'org.slf4j', name: 'slf4j-api', version:'1.7.13')
        compile(group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5')
        compile(group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.5')

        // yaml support
        compile(group: 'org.yaml', name: 'snakeyaml', version: '1.16')

        // duh
        compile(group: 'org.elasticsearch', name: 'elasticsearch', version: '2.1.0')

        // for ES's JNA sorcery
        // actually serves no purpose other than shutting ES up on startup
        compile(group: 'net.java.dev.jna', name: 'jna', version: '4.2.1')

        // also duh
        compile(group:'org.apache.kafka', name: 'kafka-clients', version: '0.8.2.2')
    }

    javadoc {
        // cause there are some sneaky throws, and weird lombok annotations
        // and JDK8's doclint is suuuuuuper strict
        failOnError = false
    }

    jar {
        // when doing `gradle jar`, the output will be
        // "build/libs/baseName-version-tag.jar
        // this sets baseName to `nabuproject-dev` or `nabuproject-prod`
        // depending on what -Penv= was passed when building
        baseName = "${baseName}-${project.ext.buildEnvironment}"
    }

    shadowJar {
        // when doing `gradle shadowJar`, the output will be
        // "build/libs/baseName-version-tag-all.jar
        // this sets baseName to `nabuproject-dev` or `nabuproject-prod`
        // depending on what -Penv= was passed when building
        baseName = "${baseName}-${project.ext.buildEnvironment}"
    }
}